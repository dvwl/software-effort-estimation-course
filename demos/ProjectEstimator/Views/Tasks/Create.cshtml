@model ProjectEstimator.Models.ProjectTask

@{
    ViewData["Title"] = "Create Task";
}

<div class="container">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card">
                <div class="card-header">
                    <h3><i class="fas fa-plus"></i> Create New Task</h3>
                </div>
                <div class="card-body">
                    <form asp-action="Create" id="taskForm">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                        
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label">Task Name *</label>
                            <input asp-for="Name" class="form-control" placeholder="Enter task name" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="3" placeholder="Enter task description (optional)"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Status" class="form-label">Status</label>
                            <select asp-for="Status" class="form-select">
                                <option value="0">Not Started</option>
                                <option value="1">In Progress</option>
                                <option value="2">Completed</option>
                                <option value="3">Blocked</option>
                            </select>
                            <span asp-validation-for="Status" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Priority" class="form-label">Priority</label>
                            <select asp-for="Priority" class="form-select">
                                <option value="1">High (1)</option>
                                <option value="2">Medium-High (2)</option>
                                <option value="3" selected>Medium (3)</option>
                                <option value="4">Medium-Low (4)</option>
                                <option value="5">Low (5)</option>
                            </select>
                            <span asp-validation-for="Priority" class="text-danger"></span>
                        </div>
                        
                        <div class="card mb-3">
                            <div class="card-header bg-light">
                                <h5 class="mb-0"><i class="fas fa-calculator"></i> Three-Point Estimation</h5>
                                <small class="text-muted">Enter time estimates in hours for PERT calculation</small>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <label asp-for="OptimisticHours" class="form-label">Optimistic (Best Case) *</label>
                                        <div class="input-group">
                                            <input asp-for="OptimisticHours" class="form-control" type="number" step="0.5" min="0" placeholder="0.0" onchange="calculateExpected()" />
                                            <span class="input-group-text">hours</span>
                                        </div>
                                        <span asp-validation-for="OptimisticHours" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-4">
                                        <label asp-for="MostLikelyHours" class="form-label">Most Likely (Realistic) *</label>
                                        <div class="input-group">
                                            <input asp-for="MostLikelyHours" class="form-control" type="number" step="0.5" min="0" placeholder="0.0" onchange="calculateExpected()" />
                                            <span class="input-group-text">hours</span>
                                        </div>
                                        <span asp-validation-for="MostLikelyHours" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-4">
                                        <label asp-for="PessimisticHours" class="form-label">Pessimistic (Worst Case) *</label>
                                        <div class="input-group">
                                            <input asp-for="PessimisticHours" class="form-control" type="number" step="0.5" min="0" placeholder="0.0" onchange="calculateExpected()" />
                                            <span class="input-group-text">hours</span>
                                        </div>
                                        <span asp-validation-for="PessimisticHours" class="text-danger"></span>
                                    </div>
                                </div>
                                
                                <div class="row mt-3">
                                    <div class="col-md-12">
                                        <div class="alert alert-info">
                                            <strong>PERT Calculation Preview:</strong>
                                            <div id="pertPreview">
                                                Expected Hours: <span id="expectedHours">0.0</span> hours<br>
                                                Standard Deviation: <span id="standardDev">0.0</span> hours<br>
                                                <small class="text-muted">Formula: (Optimistic + 4×Most Likely + Pessimistic) ÷ 6</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Task Dependencies</label>
                            <div class="form-text mb-2">Select tasks that must be completed before this task can start:</div>
                            @if (ViewBag.AvailableTasks != null && ((List<ProjectEstimator.Models.ProjectTask>)ViewBag.AvailableTasks).Any())
                            {
                                <div class="border rounded p-3" style="max-height: 200px; overflow-y: auto;">
                                    @foreach (var task in (List<ProjectEstimator.Models.ProjectTask>)ViewBag.AvailableTasks)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" name="DependencyIds" value="@task.Id" id="dep_@task.Id">
                                            <label class="form-check-label" for="dep_@task.Id">
                                                @task.Name 
                                                <small class="text-muted">(@task.ExpectedHours.ToString("F1")h)</small>
                                            </label>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="text-muted">No existing tasks available for dependencies. Create other tasks first to establish dependencies.</div>
                            }
                        </div>
                        
                        <div class="d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Create Task
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function calculateExpected() {
            const optimistic = parseFloat(document.getElementById('OptimisticHours').value) || 0;
            const mostLikely = parseFloat(document.getElementById('MostLikelyHours').value) || 0;
            const pessimistic = parseFloat(document.getElementById('PessimisticHours').value) || 0;
            
            if (optimistic > 0 || mostLikely > 0 || pessimistic > 0) {
                // PERT formula: (O + 4M + P) / 6
                const expected = (optimistic + 4 * mostLikely + pessimistic) / 6;
                
                // Standard deviation formula: (P - O) / 6
                const standardDev = (pessimistic - optimistic) / 6;
                
                document.getElementById('expectedHours').textContent = expected.toFixed(1);
                document.getElementById('standardDev').textContent = Math.abs(standardDev).toFixed(1);
            } else {
                document.getElementById('expectedHours').textContent = '0.0';
                document.getElementById('standardDev').textContent = '0.0';
            }
        }
        
        // Form validation
        document.getElementById('taskForm').addEventListener('submit', function(e) {
            const optimistic = parseFloat(document.getElementById('OptimisticHours').value) || 0;
            const mostLikely = parseFloat(document.getElementById('MostLikelyHours').value) || 0;
            const pessimistic = parseFloat(document.getElementById('PessimisticHours').value) || 0;
            
            if (optimistic > pessimistic) {
                e.preventDefault();
                alert('Optimistic hours cannot be greater than pessimistic hours.');
                return false;
            }
            
            if (mostLikely < optimistic || mostLikely > pessimistic) {
                e.preventDefault();
                alert('Most likely hours should be between optimistic and pessimistic hours.');
                return false;
            }
        });
    </script>
}
