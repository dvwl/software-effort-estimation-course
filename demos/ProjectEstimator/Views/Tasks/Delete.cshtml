@model ProjectEstimator.Models.ProjectTask

@{
    ViewData["Title"] = "Delete Task";
}

<div class="container">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card border-danger">
                <div class="card-header bg-danger text-white">
                    <h3><i class="fas fa-exclamation-triangle"></i> Delete Task Confirmation</h3>
                </div>
                <div class="card-body">
                    <div class="alert alert-danger">
                        <h4>Are you sure you want to delete this task?</h4>
                        <p class="mb-0">This action cannot be undone.</p>
                    </div>
                    
                    <h4>Task Details:</h4>
                    <table class="table table-borderless">
                        <tr>
                            <td><strong>Name:</strong></td>
                            <td>@Model.Name</td>
                        </tr>
                        <tr>
                            <td><strong>Description:</strong></td>
                            <td>@(string.IsNullOrEmpty(Model.Description) ? "No description" : Model.Description)</td>
                        </tr>
                        <tr>
                            <td><strong>Status:</strong></td>
                            <td>
                                <span class="badge @GetStatusBadgeClass(Model.Status)">
                                    @Model.Status
                                </span>
                            </td>
                        </tr>
                        <tr>
                            <td><strong>Expected Hours:</strong></td>
                            <td><strong>@Model.ExpectedHours.ToString("F1") hours</strong></td>
                        </tr>
                        <tr>
                            <td><strong>Dependencies:</strong></td>
                            <td>
                                @if (Model.Dependencies.Any())
                                {
                                    @string.Join(", ", Model.Dependencies.Select(d => d.Name))
                                }
                                else
                                {
                                    <span class="text-muted">None</span>
                                }
                            </td>
                        </tr>
                    </table>
                    
                    @if (ViewBag.DependentTasks != null && ((List<ProjectEstimator.Models.ProjectTask>)ViewBag.DependentTasks).Any())
                    {
                        <div class="alert alert-warning">
                            <h5><i class="fas fa-exclamation-triangle"></i> Warning: Dependent Tasks</h5>
                            <p>The following tasks depend on this task and will be affected:</p>
                            <ul class="mb-0">
                                @foreach (var dep in (List<ProjectEstimator.Models.ProjectTask>)ViewBag.DependentTasks)
                                {
                                    <li><strong>@dep.Name</strong> (@dep.ExpectedHours.ToString("F1") hours)</li>
                                }
                            </ul>
                            <p class="mt-2 mb-0">
                                <small class="text-muted">
                                    These tasks will have their dependencies automatically updated when this task is deleted.
                                </small>
                            </p>
                        </div>
                    }
                    
                    @if (Model.IsOnCriticalPath)
                    {
                        <div class="alert alert-danger">
                            <h5><i class="fas fa-exclamation-triangle"></i> Critical Path Impact</h5>
                            <p class="mb-0">
                                This task is on the <strong>critical path</strong>. Deleting it may significantly impact 
                                the project timeline and dependencies.
                            </p>
                        </div>
                    }
                    
                    <form asp-action="Delete" method="post">
                        <input type="hidden" asp-for="Id" />
                        <div class="d-flex justify-content-between mt-4">
                            <div>
                                <a asp-action="Index" class="btn btn-secondary">
                                    <i class="fas fa-arrow-left"></i> Cancel
                                </a>
                                <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-info">
                                    <i class="fas fa-eye"></i> View Details
                                </a>
                            </div>
                            <button type="submit" class="btn btn-danger">
                                <i class="fas fa-trash"></i> Delete Task
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(ProjectEstimator.Models.TaskStatus status)
    {
        return status switch
        {
            ProjectEstimator.Models.TaskStatus.NotStarted => "bg-secondary",
            ProjectEstimator.Models.TaskStatus.InProgress => "bg-primary",
            ProjectEstimator.Models.TaskStatus.Completed => "bg-success",
            ProjectEstimator.Models.TaskStatus.Blocked => "bg-danger",
            _ => "bg-secondary"
        };
    }
}
